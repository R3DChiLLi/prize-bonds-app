name: Python Flask CI

on:
  push:
    branches: [ master ]  # Runs when you push to master
  workflow_dispatch:       # Also allows manual run from GitHub

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: prod
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/pb-app-image:latest .

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/pb-app-image:{{ github.sha }}

    - name: Deploy to Azure App Service using Docker
      uses: azure/webapps-deploy@v2
      with:
        app-name: pb-app-service  # Replace with your app name
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: ${{ secrets.DOCKER_USERNAME }}/pb-app-image:{{ github.sha }}  # Docker image to deploy





# name: Python Flask CI

# on:
#   push:
#     branches: [ master ]  # Runs when you push to master
#   workflow_dispatch:       # Also allows manual run from GitHub

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Install dependencies
#       run: |
#         pip install -r requirements.txt

#     # - name: Run tests
#     #   run: |
#     #     cd /home/ec2-user/actions-runner/_work/prize-bonds-app/prize-bonds-app
#     #     nohup gunicorn -w 4 -b 0.0.0.0:5002 serials_db:app > app.log 2>&1 &

#     - name: Deploy To Azure App Service
#       uses: azure/webapps-deploy@v2
#       with:
#         app-name: pb-app-service  # Replace with your app name
#         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#         package: .                 # Path to the package to deploy (current directory)
#         runtime: 'PYTHON|3.8'     # Specify the Python version if needed

